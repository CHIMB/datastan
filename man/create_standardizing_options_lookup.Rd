% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flag_standardizing_script.R
\name{create_standardizing_options_lookup}
\alias{create_standardizing_options_lookup}
\title{Create Standardizing Options Lookup}
\usage{
create_standardizing_options_lookup(
  convert_name_case,
  convert_name_to_ascii,
  remove_name_punctuation,
  compress_name_whitespace,
  list_all_curr_given_names,
  list_all_curr_surnames,
  list_all_curr_names,
  impute_sex,
  impute_sex_type,
  chosen_sex_file,
  compress_location_whitespace,
  remove_location_punctuation,
  convert_location_case,
  convert_location_to_ascii,
  extract_postal_code,
  file_output,
  output_non_linkage_fields,
  chunk_size,
  debug_mode,
  max_file_size_output,
  read_mode
)
}
\arguments{
\item{convert_name_case}{Convert the capitalization of a person's name. (Options: "upper", "lower", "default")}

\item{convert_name_to_ascii}{Remove diacritics of a person's name. (Options: "yes", "no")}

\item{remove_name_punctuation}{Remove any symbols or punctuation from a person's name. (Options: "yes", "no")}

\item{compress_name_whitespace}{Replace name white space with an empty string symbol. (Options: "yes", "no")}

\item{list_all_curr_given_names}{Combine all given names of a person into an additional column. (Options: "yes", "no")}

\item{list_all_curr_surnames}{Combine all surnames of a person into an additional column. (Options: "yes", "no")}

\item{list_all_curr_names}{Combine all names of a person into an additional column. (Options: "yes", "no")}

\item{impute_sex}{Impute missing values in sex fields. (Options: "yes", "no")}

\item{impute_sex_type}{How should the sex imputation take place? (Options: "custom" - Must be a .csv file with two columns [primary_given_name] & [sex], "internal" - Use sex values from the source data set)}

\item{chosen_sex_file}{If the custom type is chosen, supply an input file.}

\item{compress_location_whitespace}{Replace location based fields white space with an empty string symbol. (Options: "yes", "no")}

\item{remove_location_punctuation}{Remove any symbols or punctuation from location based fields. (Options: "yes", "no")}

\item{convert_location_case}{Convert the capitalization of a location based field. (Options: "upper", "lower", "default")}

\item{convert_location_to_ascii}{Remove diacritics of a location based field. (Options: "yes", "no")}

\item{extract_postal_code}{Attempt to extract postal codes from location based fields and place an additional column. (Options: "yes", "no")}

\item{file_output}{What file output format is desired. (Options: "csv", "rds", "sqlite")}

\item{output_non_linkage_fields}{Output non-linkage fields in a separate file? (Options: "yes", "no")}

\item{chunk_size}{How many rows should be read at a time when reading the source file in chunks? (Options: 10000-1000000)}

\item{debug_mode}{Print additional information to the console in case of potential bugs? (Options: "on", "off")}

\item{max_file_size_output}{What is the max file size that a data frame can be before it isn't returned? (Options: integer in Mega-bytes)}

\item{read_mode}{Read delimited data using the base file path, or using shell commands? (Options: "path", "cmd")}
}
\value{
A lookup table consisting of chosen flags and the assigned default options for bad inputs or undefined choices.
}
\description{
Using this function the user can supply any number of flag options they want (not all are required, missing entries will be given a default
value) which will be used as additional standardization rules.
}
\examples{
flags <- create_standardizing_options_lookup(convert_name_case = "upper", impute_sex = "yes", chunk_size = 15000, max_file_size_output = 200)
}
